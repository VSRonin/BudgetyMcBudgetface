name: Main Platforms
on: 
  push:
    branches:
      - master
      - dev
      - bugfix
      - ci_admin
    paths-ignore:
      - '.travis.yml'
      - 'docs/**'
      - '**.markdown'
      - '**.md'
      - 'LICENSE'
  pull_request_target:
    paths-ignore:
      - '.travis.yml'
      - 'docs/**'
      - '**.markdown'
      - '**.md'
      - 'LICENSE'
jobs:
    build:
        name: Build and Test ${{ matrix.platforms.friendly_name }} Qt${{ matrix.qt_version.qt_ver }}
        runs-on: ${{ matrix.platforms.os }}
        strategy:
          fail-fast: false
          matrix:
              qt_version:
                - { qt_ver: 6.5.3 }
              platforms:
                - { os: windows-latest, generator: "NMake Makefiles", friendly_name: MSVC }
        steps:
          - name: Install Qt
            uses: jurplel/install-qt-action@v3
            with:
              version: ${{ matrix.qt_version.qt_ver }}
          - name: Install QtModelUtilities
            uses: robinraju/release-downloader@v1.9
            with: 
              repository: "VSRonin/QtModelUtilities"
              latest: true
              preRelease: false
              fileName: "*-MSVC-Qt6-x64.zip"
              out-file-path: "./QtModelUtilities"
              extract: true
              tarBall: false
              zipBall: false
          - name: Adjust QtModelUtilitiesPath
            run: |
              cd QtModelUtilities
              Set "FirstDir="
              For /d %%D in ("./*") do If not defined FirstDir Set "FirstDir=%%D"
              PushD "%FirstDir%"
              For /d %%D in ("./*") do move %%D ../
              popd
              rmdir "%FirstDir%"
          - name: Install SQLite
            shell: pwsh
            run: choco install sqlite
          - name: Git Checkout
            uses: actions/checkout@v4
            with:
              fetch-depth: 0
          - name: Generate Default DB File
            shell: pwsh
            run: |
              cd src\resources
              sqlite3 defaultdb.sqlite ".read filldefaultdatabase.sql" ".exit"
          - name: Create Build Directory
            shell: pwsh
            run: |
              mkdir build
              cd build
              mkdir debug
              mkdir release
          - name: Set up MSVC environment
            if: ${{ matrix.platforms.friendly_name == 'MSVC' }}
            uses: ilammy/msvc-dev-cmd@v1
          - name: Build
            shell: pwsh
            run: |
              set PATH=%cd%/QtModelUtilities;%PATH%
              cd build/debug
              cmake -G"${{ matrix.platforms.generator }}" -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_DEBUG_POSTFIX=d -DBUILD_TESTING=ON -DTEST_OUTPUT_XML=ON -DCMAKE_INSTALL_PREFIX="../installed" ../../
              cmake --build .
              cmake --build . --target install
              cd ../release
              cmake -G"${{ matrix.platforms.generator }}" -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_TESTING=ON -DTEST_OUTPUT_XML=ON -DCMAKE_INSTALL_PREFIX="../installed" ../../
              cmake --build .
              cmake --build . --target install
          - name: Test
            if: ${{ matrix.platforms.friendly_name != 'MSVC' }}
            id: runtests
            shell: pwsh
            run: |
              cd build
              $OldPath = [Environment]::GetEnvironmentVariable("PATH")
              [Environment]::SetEnvironmentVariable("PATH","$pwd/installed/lib;$pwd/installed/bin;$OldPath")
              cd debug
              cmake --build . --target test
              cd ../release
              cmake --build . --target test
          - name: Prepare Test Report
            if: ${{ always() && (steps.runtests.outcome == 'failure') }}
            uses: ./ci/processtestresults
            with:
                qt-tests: build/TestResults
                junit-output: build/TestResults/junitresult.xml
                html-output: build/TestResults/testsreport.html
          - name: Publish Test Report
            if: ${{ always() && (steps.runtests.outcome == 'failure') }}
            uses: actions/upload-artifact@v4
            with:
                name: ${{ matrix.platforms.friendly_name }}-Qt${{ matrix.qt_version.qt_ver }}
                path: |
                  build/TestResults/*.xml
                  build/TestResults/testsreport.html